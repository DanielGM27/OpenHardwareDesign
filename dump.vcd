$version Generated by VerilatedVcd $end
$timescale 10ps $end
 $scope module $rootio $end
 $upscope $end
 $scope module tb_regfile $end
  $var wire 32 N XLen [31:0] $end
  $var wire 32 N NReg [31:0] $end
  $var wire 32 O NRegWidth [31:0] $end
  $var wire 32 P Iterations [31:0] $end
  $var wire 1 K clk $end
  $var wire 1 # rst_n $end
  $var wire 5 $ a1 [4:0] $end
  $var wire 5 % a2 [4:0] $end
  $var wire 5 & a3 [4:0] $end
  $var wire 1 ' we3 $end
  $var wire 32 ( wd3 [31:0] $end
  $var wire 32 L rd1 [31:0] $end
  $var wire 32 M rd2 [31:0] $end
  $scope module regfile_i $end
   $var wire 32 N XLen [31:0] $end
   $var wire 32 N NReg [31:0] $end
   $var wire 32 O NRegWidth [31:0] $end
   $var wire 1 K clk_i $end
   $var wire 1 # rst_ni $end
   $var wire 5 $ a1_i [4:0] $end
   $var wire 5 % a2_i [4:0] $end
   $var wire 5 & a3_i [4:0] $end
   $var wire 1 ' we3_i $end
   $var wire 32 ( wd3_i [31:0] $end
   $var wire 32 L rd1_o [31:0] $end
   $var wire 32 M rd2_o [31:0] $end
   $var wire 32 * rf[0] [31:0] $end
   $var wire 32 + rf[1] [31:0] $end
   $var wire 32 , rf[2] [31:0] $end
   $var wire 32 - rf[3] [31:0] $end
   $var wire 32 . rf[4] [31:0] $end
   $var wire 32 / rf[5] [31:0] $end
   $var wire 32 0 rf[6] [31:0] $end
   $var wire 32 1 rf[7] [31:0] $end
   $var wire 32 2 rf[8] [31:0] $end
   $var wire 32 3 rf[9] [31:0] $end
   $var wire 32 4 rf[10] [31:0] $end
   $var wire 32 5 rf[11] [31:0] $end
   $var wire 32 6 rf[12] [31:0] $end
   $var wire 32 7 rf[13] [31:0] $end
   $var wire 32 8 rf[14] [31:0] $end
   $var wire 32 9 rf[15] [31:0] $end
   $var wire 32 : rf[16] [31:0] $end
   $var wire 32 ; rf[17] [31:0] $end
   $var wire 32 < rf[18] [31:0] $end
   $var wire 32 = rf[19] [31:0] $end
   $var wire 32 > rf[20] [31:0] $end
   $var wire 32 ? rf[21] [31:0] $end
   $var wire 32 @ rf[22] [31:0] $end
   $var wire 32 A rf[23] [31:0] $end
   $var wire 32 B rf[24] [31:0] $end
   $var wire 32 C rf[25] [31:0] $end
   $var wire 32 D rf[26] [31:0] $end
   $var wire 32 E rf[27] [31:0] $end
   $var wire 32 F rf[28] [31:0] $end
   $var wire 32 G rf[29] [31:0] $end
   $var wire 32 H rf[30] [31:0] $end
   $var wire 32 I rf[31] [31:0] $end
   $var wire 32 J i [31:0] $end
   $scope module prop_regfile_i $end
    $var wire 32 N XLen [31:0] $end
    $var wire 32 N NReg [31:0] $end
    $var wire 32 O NRegWidth [31:0] $end
    $var wire 1 K clk_i $end
    $var wire 1 # rst_ni $end
    $var wire 5 $ a1_i [4:0] $end
    $var wire 5 % a2_i [4:0] $end
    $var wire 5 & a3_i [4:0] $end
    $var wire 1 ' we3_i $end
    $var wire 32 ( wd3_i [31:0] $end
    $var wire 32 L rd1_o [31:0] $end
    $var wire 32 M rd2_o [31:0] $end
    $var wire 32 * rf[0] [31:0] $end
    $var wire 32 + rf[1] [31:0] $end
    $var wire 32 , rf[2] [31:0] $end
    $var wire 32 - rf[3] [31:0] $end
    $var wire 32 . rf[4] [31:0] $end
    $var wire 32 / rf[5] [31:0] $end
    $var wire 32 0 rf[6] [31:0] $end
    $var wire 32 1 rf[7] [31:0] $end
    $var wire 32 2 rf[8] [31:0] $end
    $var wire 32 3 rf[9] [31:0] $end
    $var wire 32 4 rf[10] [31:0] $end
    $var wire 32 5 rf[11] [31:0] $end
    $var wire 32 6 rf[12] [31:0] $end
    $var wire 32 7 rf[13] [31:0] $end
    $var wire 32 8 rf[14] [31:0] $end
    $var wire 32 9 rf[15] [31:0] $end
    $var wire 32 : rf[16] [31:0] $end
    $var wire 32 ; rf[17] [31:0] $end
    $var wire 32 < rf[18] [31:0] $end
    $var wire 32 = rf[19] [31:0] $end
    $var wire 32 > rf[20] [31:0] $end
    $var wire 32 ? rf[21] [31:0] $end
    $var wire 32 @ rf[22] [31:0] $end
    $var wire 32 A rf[23] [31:0] $end
    $var wire 32 B rf[24] [31:0] $end
    $var wire 32 C rf[25] [31:0] $end
    $var wire 32 D rf[26] [31:0] $end
    $var wire 32 E rf[27] [31:0] $end
    $var wire 32 F rf[28] [31:0] $end
    $var wire 32 G rf[29] [31:0] $end
    $var wire 32 H rf[30] [31:0] $end
    $var wire 32 I rf[31] [31:0] $end
   $upscope $end
  $upscope $end
  $scope module unnamedblk1 $end
   $var wire 32 ) i [31:0] $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
0#
b00000 $
b00000 %
b00000 &
0'
b00000000000000000000000000000000 (
b00000000000000000000000000000000 )
b00000000000000000000000000000000 *
b00000000000000000000000000000000 +
b00000000000000000000000000000000 ,
b00000000000000000000000000000000 -
b00000000000000000000000000000000 .
b00000000000000000000000000000000 /
b00000000000000000000000000000000 0
b00000000000000000000000000000000 1
b00000000000000000000000000000000 2
b00000000000000000000000000000000 3
b00000000000000000000000000000000 4
b00000000000000000000000000000000 5
b00000000000000000000000000000000 6
b00000000000000000000000000000000 7
b00000000000000000000000000000000 8
b00000000000000000000000000000000 9
b00000000000000000000000000000000 :
b00000000000000000000000000000000 ;
b00000000000000000000000000000000 <
b00000000000000000000000000000000 =
b00000000000000000000000000000000 >
b00000000000000000000000000000000 ?
b00000000000000000000000000000000 @
b00000000000000000000000000000000 A
b00000000000000000000000000000000 B
b00000000000000000000000000000000 C
b00000000000000000000000000000000 D
b00000000000000000000000000000000 E
b00000000000000000000000000000000 F
b00000000000000000000000000000000 G
b00000000000000000000000000000000 H
b00000000000000000000000000000000 I
b00000000000000000000000000000000 J
0K
b00000000000000000000000000000000 L
b00000000000000000000000000000000 M
b00000000000000000000000000100000 N
b00000000000000000000000000000101 O
b00000000000000000000000001000000 P
#500
b00000000000000000000000000100000 J
1K
#1000
0K
#1500
1K
#2000
0K
#2500
1K
#3000
0K
#3500
1K
#4000
0K
#4500
1K
#5000
0K
#5500
1K
#6000
0K
#6500
1K
#7000
0K
#7500
1K
#8000
0K
#8500
1K
#9000
0K
#9500
1K
#10000
1#
b00100 %
1'
b00001011000111100101110110011100 (
0K
#10500
1K
#11000
0'
0K
